[project]
name = "ai-research-assistant"
version = "1.0.0"
description = "AI-powered academic research assistant API"
authors = [
    {name = "AI Research Team", email = "team@airesearch.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
dependencies = [
    # FastAPI and server
    "fastapi[standard]>=0.104.0",
    "uvicorn[standard]>=0.24.0",

    # Database
    "sqlalchemy>=2.0.23",
    "alembic>=1.13.1",
    "psycopg2-binary>=2.9.9",
    "asyncpg>=0.29.0",

    # AI and ML
    "openai>=1.3.0",
    "anthropic>=0.7.0",
    "pinecone-client>=2.2.4",
    "sentence-transformers>=2.2.2",

    # PDF Processing
    "pypdf2>=3.0.1",
    "pymupdf>=1.23.0",
    "python-docx>=1.1.0",

    # Background Tasks
    "celery[redis]>=5.3.4",
    "redis>=5.0.1",

    # Authentication and Security
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.6",

    # HTTP and Data Processing
    "httpx>=0.25.0",
    "aiofiles>=23.2.1",
    "python-dotenv>=1.0.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",

    # Utilities
    "python-slugify>=8.0.1",
    "python-dateutil>=2.8.2",
    "feedparser>=6.0.10",
    "beautifulsoup4>=4.12.2",
    "lxml>=4.9.3",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.0",  # for testing FastAPI

    # Code Quality
    "ruff>=0.1.6",
    "black>=23.11.0",
    "mypy>=1.7.1",
    "pre-commit>=3.5.0",

    # Development tools
    "ipython>=8.17.2",
    "jupyter>=1.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
env = [
    "TESTING=true",
    "DATABASE_URL=postgresql://test:test@localhost:5432/test_research_db",
    "REDIS_URL=redis://localhost:6379/1",
    "SECRET_KEY=test-secret-key",
    "OPENAI_API_KEY=test-key",
]

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.hatch.build.targets.wheel]
packages = ["app"]