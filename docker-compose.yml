version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: research_postgres
    environment:
      POSTGRES_DB: research_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d research_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - research_network

  # Redis for caching and background tasks
  redis:
    image: redis:7-alpine
    container_name: research_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - research_network

  # FastAPI Application
  api:
    build:
      context: .
      target: development
    container_name: research_api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/research_db
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=true
      - ENVIRONMENT=development
    volumes:
      - .:/app
      - /app/.venv  # Anonymous volume for virtual environment
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - research_network
    restart: unless-stopped

  # Celery Worker
  celery_worker:
    build:
      context: .
      target: development
    container_name: research_celery_worker
    command: uv run celery -A app.services.celery_app worker --loglevel=info --concurrency=4
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/research_db
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=true
      - ENVIRONMENT=development
    volumes:
      - .:/app
      - /app/.venv
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - research_network
    restart: unless-stopped

  # Celery Beat (Scheduler)
  celery_beat:
    build:
      context: .
      target: development
    container_name: research_celery_beat
    command: uv run celery -A app.services.celery_app beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/research_db
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=true
      - ENVIRONMENT=development
    volumes:
      - .:/app
      - /app/.venv
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - research_network
    restart: unless-stopped

  # Flower (Celery Monitoring)
  flower:
    build:
      context: .
      target: development
    container_name: research_flower
    command: uv run celery -A app.services.celery_app flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/research_db
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - .:/app
      - /app/.venv
    depends_on:
      - redis
    networks:
      - research_network
    restart: unless-stopped

  # Nginx (Optional - for production-like setup)
  nginx:
    image: nginx:alpine
    container_name: research_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
    networks:
      - research_network
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  research_network:
    driver: bridge